
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .wrap {
        margin: 4rem auto;
        width: 1000px;
        position: relative;
        background: #fff;
    }

    .chart-box {
        padding-left: 0;
        background: #fff;
    }

    #chart-Total,
    #chart-SB {
        width: 96%;
        max-width: 48%;
        box-shadow: none;
    }

    #chart-Total {
        float: left;
        position: relative;
        transition: 1s ease transform;
        z-index: 3;
    }

        #chart-Total.chart-SB-activated {
            transform: translateX(0);
            transition: 1s ease transform;
        }

    #chart-SB {
        float: left;
        position: relative;
        z-index: -2;
        transition: 1s ease transform;
    }

        #chart-SB.active {
            transition: 1.1s ease-in-out transform;
            transform: translateX(0);
            z-index: 1;
        }

    @@media screen and (min-width: 480px) {
        #chart-Total {
            transform: translateX(50%);
        }

        #chart-SB {
            transform: translateX(-50%);
        }
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="card" style="background-color: #ffffff;">
            <div class="card-header card-header-icon card-header-info">
                <div class="card-icon">
                    <i class="material-icons">flash_on</i>
                </div>
                <h4 class="card-title" style="font-weight:bold;color:#013d66">電盤資訊查詢</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <div>
                        選擇週期：
                        <select class="selectpicker" data-size="5" data-style="btn btn-info btn-fill" title="請選擇週期" id="SearchPeriod" onchange="ChangePeriod()">
                            <option disabled="disabled" selected="selected">請選擇週期</option>
                            <option value="Year">年</option>
                            <option value="Month">月</option>
                            <option value="Week">週</option>
                            <option value="Day">日</option>
                        </select>
                    </div>
                    <div class="SearchYear" style="margin-top:12px;margin-bottom:5px;display:none;">
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        選擇年分：
                    </div>
                    <div class="SearchYear" style="display:none;">
                        <div id="SelectYearDiv"></div>
                    </div>
                    <div class="SearchMonth" style="margin-top:12px;margin-bottom:5px;display:none;">
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        選擇年月分：
                    </div>
                    <div class="SearchMonth" style="display:none;">
                        <div id="SelectMonthDiv"></div>
                    </div>
                    <div class="SearchWeek" style="margin-top:12px;margin-bottom:5px;display:none;">
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        選擇年分週數：
                    </div>
                    <div class="SearchWeek" style="display:none;">
                        <div id="SelectWeekDiv"></div>
                    </div>
                    <div class="SearchDay" style="margin-top:12px;margin-bottom:5px;display:none;">
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        選擇日期：
                    </div>
                    <div class="SearchDay" style="margin-top:5px;margin-bottom:5px;display:none;">
                        <input type="text" class="form-control datepicker" id="SelectDay" style="font-weight:bold;color:#013d66;text-align:center;">
                    </div>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <button onclick="SwitchBoardSearch()" id="SearchButton" type="button" class="btn btn-fill btn-sm btn-warning" style="font-weight:bold;margin-top:5px;margin-bottom:9px;">查詢</button>
                    &nbsp;&nbsp;&nbsp;
                    <button onclick="SwitchBoardReport()" id="OutputButton" type="button" class="btn btn-fill btn-success SearchSuccess" style="font-weight:bold;margin-top:5px;margin-bottom:9px;display:none;">輸出成Excel</button>
                </div>
                <div class="row" id="OutputReport" style="display:none;">
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <div id="downloadfile"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row SearchSuccess" id="SearchDIV" style="display:none;">
    <div class="col-md-12">
        <table class="col-md-12" id="Table_SwitchBoard" style="font-weight:bold;text-align:center;color:black;border-bottom:2px #000000 solid;">
            <thead id="TableThead">
                <tr style="background-color:#036EB7;border-bottom:2px #000000 solid;border-top:2px #000000 solid;color:white;font-weight:bold;text-align:center;height:40px;">
                    <th class="col-md-2">電盤名稱</th>
                    <th class="col-md-3" id="ThisPeriod">本時間段數值(kWh)</th>
                    <th class="col-md-3" id="LastPeriod">前一時間段數值(kWh)</th>
                    <th class="col-md-2">差異值(kWh)</th>
                    <th class="col-md-2">成長幅度(%)</th>
                </tr>
            </thead>
            <tbody id="TableTbody">
            </tbody>
        </table>
    </div>
</div>
<div class="row SearchSuccess" style="display:none;">
    <div class="wrap">
        <div id="chart-Total" class="chart-box"></div>
        <br />
        <div class="row" id="SBbtnDiv" style="display:none;">
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            <button onclick="SB(0)" name="SBbtn" id="SB_0" type="button" class="btn-sm EMSdata" style="background-color:#003049;border:2px solid #003049;outline:none;color:white;">VCB1</button>&nbsp;&nbsp;
            <button onclick="SB(1)" name="SBbtn" id="SB_1" type="button" class="btn-sm EMSdata" style="background-color:#D62828;border:2px solid #D62828;outline:none;color:white;">VCB2</button>&nbsp;&nbsp;
            <button onclick="SB(2)" name="SBbtn" id="SB_2" type="button" class="btn-sm EMSdata" style="background-color:#F77F00;border:2px solid #F77F00;outline:none;color:white;">VCB3</button>&nbsp;&nbsp;
            <button onclick="SB(3)" name="SBbtn" id="SB_3" type="button" class="btn-sm EMSdata" style="background-color:#FCBF49;border:2px solid #FCBF49;outline:none;color:white;">VCB4</button>&nbsp;&nbsp;
            <button onclick="SB(4)" name="SBbtn" id="SB_4" type="button" class="btn-sm EMSdata" style="background-color:#94d2bd;border:2px solid #94d2bd;outline:none;color:white;">其他</button>
        </div>
        <div id="chart-SB" class="chart-box"></div>
    </div>
</div>
<script>
    document.getElementById("SysSearchTitle").classList.add("active");
    document.getElementById("SysSearch").classList.add("show");
    document.getElementById("SwitchBoardData").classList.add("active");
    var SearchorNot = false;
    var selectedBar = 0;
    var SBchart = [];
    $(document).ready(function () {
        // initialise Datetimepicker and Sliders
        md.initFormExtendedDatetimepickers();
        if ($('.slider').length != 0) {
            md.initSliders();
        }
        $("#SearchDay").datepicker("setDate", new Date());
    });

    function ChangePeriod() {
        var SelectPeriod = document.getElementById("SearchPeriod").value;
        if (SelectPeriod == "Day") {
            $(".SearchYear").hide();
            $(".SearchMonth").hide();
            $(".SearchWeek").hide();
            $(".SearchDay").show();
        }
        else if (SelectPeriod == "Year" || SelectPeriod == "Month" || SelectPeriod == "Week") {
            let data = {
                data: {
                    'SelectPeriod': SelectPeriod,
                }
            }
            $.ajax({
                type: "POST",
                url: "/Search/SBChangePeriod",
                contentType: 'application/json;charset=UTF-8',
                async: false,
                cache: false,
                dataType: "json",
                data: JSON.stringify(data),
                success: function (data) {
                    console.log("ChangePeriod_success");
                    if (SelectPeriod == "Year") {
                        document.getElementById("SelectYearDiv").innerHTML = "";
                        var SelectTimestring = "";
                        for (var i = 0; i < data[0].Time.length; i++) SelectTimestring = SelectTimestring + '<option value="' + data[0].Time[i] + '">' + data[0].Time[i] + '</option>';
                        $("#SelectYearDiv").append('<select id="SelectYear" class="selectpicker" data-style="btn btn-info" data-live-search="true" title="請選擇年分" data-size="8"><option disabled="disabled" selected="selected">請選擇年分</option>' + SelectTimestring + '</select>');
                        $('.selectpicker').selectpicker('render');
                        $(".SearchYear").show();
                        $(".SearchMonth").hide();
                        $(".SearchWeek").hide();
                        $(".SearchDay").hide();
                    }
                    else if (SelectPeriod == "Month") {
                        document.getElementById("SelectMonthDiv").innerHTML = "";
                        for (var i = 0; i < data[0].Time.length; i++) SelectTimestring = SelectTimestring + '<option value="' + data[0].Time[i] + '">' + data[0].Time[i] + '</option>';
                        $("#SelectMonthDiv").append('<select id="SelectMonth" class="selectpicker" data-style="btn btn-info" data-live-search="true" title="請選擇年月分" data-size="8"><option disabled="disabled" selected="selected">請選擇年月分</option>' + SelectTimestring + '</select>');
                        $('.selectpicker').selectpicker('render');
                        $(".SearchYear").hide();
                        $(".SearchMonth").show();
                        $(".SearchWeek").hide();
                        $(".SearchDay").hide();
                    }
                    else if (SelectPeriod == "Week") {
                        document.getElementById("SelectWeekDiv").innerHTML = "";
                        for (var i = 0; i < data[0].Time.length; i++) SelectTimestring = SelectTimestring + '<option value="' + data[0].Time[i] + '">' + data[0].Time[i] + '</option>';
                        $("#SelectWeekDiv").append('<select id="SelectWeek" class="selectpicker" data-style="btn btn-info" data-live-search="true" title="請選擇年分週數" data-size="8"><option disabled="disabled" selected="selected">請選擇年分週數</option>' + SelectTimestring + '</select>');
                        $('.selectpicker').selectpicker('render');
                        $(".SearchYear").hide();
                        $(".SearchMonth").hide();
                        $(".SearchWeek").show();
                        $(".SearchDay").hide();
                    }
                },
                error: function (res) {
                    console.log('ChangePeriod_false');
                }
            });
        }
    };

    function SwitchBoardSearch() {
        var SelectPeriod = document.getElementById("SearchPeriod").value;
        if (SelectPeriod == "請選擇週期") {
            alert("請選擇欲查詢的週期並選擇欲查詢的時間區間");
            return
        }
        var SelectedTime = "";
        var TotalChartTitle = "";
        if (SelectPeriod == "Year") {
            SelectedTime = document.getElementById("SelectYear").value;
            TotalChartTitle = "Yearly Results";
            document.getElementById("ThisPeriod").innerText = "本年數值(kWh)";
            document.getElementById("LastPeriod").innerText = "前一年數值(kWh)";
            if (SelectedTime == "請選擇年分") {
                alert("請選擇欲查詢的年分");
                return
            }
        }
        else if (SelectPeriod == "Month") {
            SelectedTime = document.getElementById("SelectMonth").value;
            TotalChartTitle = "Monthly Results";
            document.getElementById("ThisPeriod").innerText = "本月數值(kWh)";
            document.getElementById("LastPeriod").innerText = "前一月數值(kWh)";
            if (SelectedTime == "請選擇年月分") {
                alert("請選擇欲查詢的年月分");
                return
            }
        }
        else if (SelectPeriod == "Week") {
            SelectedTime = document.getElementById("SelectWeek").value;
            TotalChartTitle = "Weekly Results";
            document.getElementById("ThisPeriod").innerText = "本週數值(kWh)";
            document.getElementById("LastPeriod").innerText = "前一週數值(kWh)";
            if (SelectedTime == "請選擇年分週數") {
                alert("請選擇欲查詢的年月週數");
                return
            }
        }
        else if (SelectPeriod == "Day") {
            SelectedTime = document.getElementById("SelectDay").value;
            TotalChartTitle = "Daily Results";
            document.getElementById("ThisPeriod").innerText = "本日數值(kWh)";
            document.getElementById("LastPeriod").innerText = "前一日數值(kWh)";
        }
        var Time = [];
        var Total = [];
        var VCB1 = [];
        var VCB2 = [];
        var VCB3 = [];
        var VCB4 = [];
        var Others = [];
        var Diff = [];
        var Percent = [];
        var arrayData = [];
        let data = {
            data: {
                'SelectPeriod': SelectPeriod,
                'SelectedTime': SelectedTime,
            }
        }
        $.ajax({
            type: "POST",
            url: "/Search/SwitchBoardSearch",
            contentType: 'application/json;charset=UTF-8',
            async: false,
            cache: false,
            dataType: "json",
            data: JSON.stringify(data),
            success: function (data) {
                console.log("Search_success");
                $('.SearchSuccess').show();
                $('#TableTbody>tr').remove();
                Time = data[0].Time;
                Total = data[0].Total;
                VCB1 = data[0].VCB1;
                VCB2 = data[0].VCB2;
                VCB3 = data[0].VCB3;
                VCB4 = data[0].VCB4;
                Others = data[0].Others;
                Diff = data[0].Diff;
                Percent = data[0].Percent;
                //Chart Data
                for (var i = 0; i < data[0].Time.length; i++) {
                    let ChartData = {
                        x: Time[i],
                        y: Total[i],
                        switchboards: [VCB1[i], VCB2[i], VCB3[i], VCB4[i], Others[i]]
                    }
                    arrayData.push(ChartData);
                }
            },
            error: function (res) {
                console.log('Search_false');
            }
        });
        $('#TableTbody').append(
            '<tr style="background-color:#FAFAFA;height:40px;text-align:center;">' +
            '<td value="VCB1">VCB1</td>' +
            '<td value="' + VCB1[0] + '">' + parseFloat(VCB1[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + VCB1[1] + '">' + parseFloat(VCB1[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[0] + '">' + parseFloat(Diff[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[0] + '">' + parseFloat(Percent[0]).toFixed(2) + '</td></tr>' +
            '<tr style="background-color:#EEEEEE;height:40px;text-align:center;">' +
            '<td value="VCB2">VCB2</td>' +
            '<td value="' + VCB2[0] + '">' + parseFloat(VCB2[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + VCB2[1] + '">' + parseFloat(VCB2[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[1] + '">' + parseFloat(Diff[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[1] + '">' + parseFloat(Percent[1]).toFixed(2) + '</td></tr>' +
            '<tr style="background-color:#FAFAFA;height:40px;text-align:center;">' +
            '<td value="VCB3">VCB3</td>' +
            '<td value="' + VCB3[0] + '">' + parseFloat(VCB3[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + VCB3[1] + '">' + parseFloat(VCB3[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[2] + '">' + parseFloat(Diff[2]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[2] + '">' + parseFloat(Percent[2]).toFixed(2) + '</td></tr>' +
            '<tr style="background-color:#EEEEEE;height:40px;text-align:center;">' +
            '<td value="VCB4">VCB4</td>' +
            '<td value="' + VCB4[0] + '">' + parseFloat(VCB4[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + VCB4[1] + '">' + parseFloat(VCB4[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[3] + '">' + parseFloat(Diff[3]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[3] + '">' + parseFloat(Percent[3]).toFixed(2) + '</td></tr>' +
            '<tr style="background-color:#FAFAFA;height:40px;text-align:center;">' +
            '<td value="其他">其他</td>' +
            '<td value="' + Others[0] + '">' + parseFloat(Others[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + Others[1] + '">' + parseFloat(Others[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[4] + '">' + parseFloat(Diff[4]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[4] + '">' + parseFloat(Percent[4]).toFixed(2) + '</td></tr>'
        );
        //Table Hover Event
        var originColor;
        $("#TableTbody > tr").hover(function () {
            originColor = this.style.backgroundColor;
            this.style.backgroundColor = '#f8e7aa';
        }, function () {
            this.style.backgroundColor = originColor;
        });
        //Table Summary
        $('#TableTbody').append(
            '<tr style="background-color:#b2dbf7;height:40px;text-align:center;border-top:2px #000000 solid;">' +
            '<td value="總計">總計</td>' +
            '<td value="' + Total[0] + '">' + parseFloat(Total[0]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + Total[1] + '">' + parseFloat(Total[1]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Diff[5] + '">' + parseFloat(Diff[5]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '</td>' +
            '<td value="' + + Percent[5] + '">' + parseFloat(Percent[5]).toFixed(2) + '</td></tr>'
        );
        //Start to Draw Chart
        if (!SearchorNot) {
            Apex = {
                chart: {
                    toolbar: {
                        show: false
                    }
                },
                tooltip: {
                    shared: false
                },
            }
            var colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#00D9E9', '#FF66C3'];
            //Draw Total Chart
            var optionsTotal = {
                chart: {
                    id: 'barTotal',
                    height: 400,
                    width: '100%',
                    type: 'bar',
                },
                plotOptions: {
                    bar: {
                        distributed: true,
                        horizontal: true,
                        endingShape: 'arrow',
                        barHeight: '75%',
                        dataLabels: {
                            position: 'bottom'
                        }
                    }
                },
                dataLabels: {
                    enabled: true,
                    textAnchor: 'start',
                    style: {
                        colors: ['#fff']
                    },
                    formatter: function (val, opt) {
                        return opt.w.globals.labels[opt.dataPointIndex]
                    },
                    offsetX: 0,
                    dropShadow: {
                        enabled: true
                    }
                },
                colors: colors,
                series: [{
                    data: arrayData
                }],
                states: {
                    normal: {
                        filter: {
                            type: 'desaturate'
                        }
                    },
                    active: {
                        allowMultipleDataPointsSelection: false,
                        filter: {
                            type: 'darken',
                            value: 1
                        }
                    }
                },
                tooltip: {
                    x: {
                        show: false
                    },
                    y: {
                        title: {
                            formatter: function (val, opts) {
                                return opts.w.globals.labels[opts.dataPointIndex]
                            }
                        }
                    }
                },
                title: {
                    text: TotalChartTitle,
                    offsetX: 15
                },
                subtitle: {
                    text: '(Click on bar to see details)',
                    offsetX: 15
                },
                yaxis: {
                    labels: {
                        show: false
                    }
                },
            }
            var TotalChart = new ApexCharts(document.querySelector("#chart-Total"), optionsTotal);
            TotalChart.render();

            //Draw Switch Board Chart
            var optionsSB = {
                chart: {
                    id: 'pieSB',
                    height: 400,
                    width: '100%',
                    type: 'pie',
                },
                //colors: ["#003049", "#D62828", "#F77F00", "#FCBF49", "#94d2bd", "#2A9D8F"],
                labels: ["VCB1", "VCB2", "VCB3", "VCB4", "其他"],
                dataLabels: {
                    formatter(val, opts) {
                        const name = opts.w.globals.labels[opts.seriesIndex]
                        return [name + ' ' + val.toFixed(1) + ' %']
                    }
                },
                legend: {
                    show: false
                },
                noData: {
                    text: "Loading...",
                    align: 'center',
                    verticalAlign: 'middle',
                    offsetX: 0,
                    offsetY: -30,
                    style: {
                        color: "#000000",
                        fontSize: '20px',
                        fontFamily: "Helvetica"
                    }
                },
                series: [{
                    data: []
                }],
            }
            var chartSB = new ApexCharts(document.querySelector("#chart-SB"), optionsSB);
            chartSB.render();

            TotalChart.addEventListener('dataPointSelection', function (e, chart, opts) {
                var SBChartEl = document.querySelector("#chart-SB");
                var TotalChartEl = document.querySelector("#chart-Total");
                if (opts.selectedDataPoints[0].length === 1) {
                    if (SBChartEl.classList.contains("active")) {
                        updatePieSBChart(chart, 'pieSB')
                    } else {
                        TotalChartEl.classList.add("chart-SB-activated")
                        SBChartEl.classList.add("active");
                        updatePieSBChart(chart, 'pieSB')
                    }
                } else {
                    updatePieSBChart(chart, 'pieSB')
                }
                if (opts.selectedDataPoints[0].length === 0) {
                    TotalChartEl.classList.remove("chart-SB-activated")
                    SBChartEl.classList.remove("active");
                }
            });

            SearchorNot = true;
        }
        else {
            ApexCharts.exec('barTotal', 'updateOptions', {
                title: {
                    text: TotalChartTitle,
                    offsetX: 15
                },
                series: [{
                    data: arrayData
                }],
            });
            if (selectedBar > arrayData.length - 1) {
                selectedBar = 0;
                SBchart = arrayData[0].switchboards;
                ApexCharts.exec('pieSB', 'updateOptions', {
                    series: arrayData[0].switchboards,
                    colors: ["#008ffb", "#89cdfa", "#dceefc", "#97b5cc", "#3e7cb3"],
                });
                var colors = ["#008ffb", "#89cdfa", "#dceefc", "#97b5cc", "#3e7cb3"];
                document.getElementById("SB_0").style.backgroundColor = colors[0];
                document.getElementById("SB_0").style.borderColor = colors[0];
                document.getElementById("SB_0").style.color = "white";
                document.getElementById("SB_1").style.backgroundColor = colors[1];
                document.getElementById("SB_1").style.borderColor = colors[1];
                document.getElementById("SB_1").style.color = "white";
                document.getElementById("SB_2").style.backgroundColor = colors[2];
                document.getElementById("SB_2").style.borderColor = colors[2];
                document.getElementById("SB_2").style.color = "white";
                document.getElementById("SB_3").style.backgroundColor = colors[3];
                document.getElementById("SB_3").style.borderColor = colors[3];
                document.getElementById("SB_3").style.color = "white";
                document.getElementById("SB_4").style.backgroundColor = colors[4];
                document.getElementById("SB_4").style.borderColor = colors[4];
                document.getElementById("SB_4").style.color = "white";
                var SBbtn = document.querySelectorAll("button[name=SBbtn]");
                for (var i = 0; i < SBbtn.length; i++) {
                    if (SBbtn[i].classList.contains('EMSdata')) { }
                    else SBbtn[i].classList.add('EMSdata');
                }
            }
            else {
                SBchart = arrayData[selectedBar].switchboards;
                ApexCharts.exec('pieSB', 'updateOptions', {
                    series: arrayData[selectedBar].switchboards,
                });
                document.getElementById("SB_0").style.backgroundColor = document.getElementById("SB_0").style.borderColor;
                document.getElementById("SB_0").style.color = "white";
                document.getElementById("SB_1").style.backgroundColor = document.getElementById("SB_1").style.borderColor;
                document.getElementById("SB_1").style.color = "white";
                document.getElementById("SB_2").style.backgroundColor = document.getElementById("SB_2").style.borderColor;
                document.getElementById("SB_2").style.color = "white";
                document.getElementById("SB_3").style.backgroundColor = document.getElementById("SB_3").style.borderColor;
                document.getElementById("SB_3").style.color = "white";
                document.getElementById("SB_4").style.backgroundColor = document.getElementById("SB_4").style.borderColor;
                document.getElementById("SB_4").style.color = "white";
                var SBbtn = document.querySelectorAll("button[name=SBbtn]");
                for (var i = 0; i < SBbtn.length; i++) {
                    if (SBbtn[i].classList.contains('EMSdata')) { }
                    else SBbtn[i].classList.add('EMSdata');
                }
            }
        }
    };

    function updatePieSBChart(sourceChart, destChartIDToUpdate) {
        $("#SBbtnDiv").show();
        var series = [];
        var colors = [];
        if (sourceChart.w.globals.selectedDataPoints[0]) {
            var selectedPoints = sourceChart.w.globals.selectedDataPoints;
            var selectedIndex = selectedPoints[0][0];
            selectedBar = selectedIndex;
            if (selectedIndex == 0) colors = ["#008ffb", "#89cdfa", "#dceefc", "#97b5cc", "#3e7cb3"];
            else if (selectedIndex == 1) colors = ["#00E396", "#86fcd4", "#d4fcef", "#8ed1ba", "#308568"];
            else if (selectedIndex == 2) colors = ["#FEB019", "#ffd482", "#fff0d4", "#d6b77a", "#b38124"];
            else if (selectedIndex == 3) colors = ["#FF4560", "#fa8e9e", "#ffdbdf", "#c4828b", "#b33648"];
            else if (selectedIndex == 4) colors = ["#775DD0", "#b9a1f7", "#e3d9fc", "#8f84ad", "#513c91"];
            var yearSeries = sourceChart.w.config.series[0];
            document.getElementById("SB_0").style.backgroundColor = colors[0];
            document.getElementById("SB_0").style.borderColor = colors[0];
            document.getElementById("SB_1").style.backgroundColor = colors[1];
            document.getElementById("SB_1").style.borderColor = colors[1];
            document.getElementById("SB_2").style.backgroundColor = colors[2];
            document.getElementById("SB_2").style.borderColor = colors[2];
            document.getElementById("SB_3").style.backgroundColor = colors[3];
            document.getElementById("SB_3").style.borderColor = colors[3];
            document.getElementById("SB_4").style.backgroundColor = colors[4];
            document.getElementById("SB_4").style.borderColor = colors[4];
            series = yearSeries.data[selectedIndex].switchboards;
            if (series.length === 0) series = [];
            SBchart = series;
            return ApexCharts.exec(destChartIDToUpdate, 'updateOptions', {
                colors: colors,
                series: series,
            })
        }
    };

    //Switch Board Pie Button
    function SB(e) {
        var buttonID = document.getElementById("SB_" + e);
        if (buttonID.classList.contains('EMSdata')) {
            buttonID.classList.remove('EMSdata');
            buttonID.style.backgroundColor = "white";
            buttonID.style.color = buttonID.style.borderColor;
        }
        else {
            buttonID.classList.add('EMSdata');
            buttonID.style.backgroundColor = buttonID.style.borderColor;
            buttonID.style.color = "white";
        }
        var SBbtn = document.querySelectorAll("button[name=SBbtn]");
        var NewSerie = [];
        for (var i = 0; i < SBbtn.length; i++) {
            if (SBbtn[i].classList.contains('EMSdata')) NewSerie[i] = SBchart[i];
            else NewSerie[i] = 0;
        }
        ApexCharts.exec('pieSB', 'updateSeries', NewSerie, true);
    };

    function SwitchBoardReport() {
        var thead = document.getElementById("TableThead");
        var theadcols = thead.rows[0].cells.length;
        var tbody = document.getElementById("TableTbody");
        var tbodyrows = tbody.rows.length;
        var tbodycols = tbody.rows[0].cells.length;
        var TheadContent = [];
        var TbodyContent = [];
        for (i = 0; i < theadcols; i++) TheadContent.push(thead.rows[0].cells[i].innerHTML);
        for (var i = 0; i < tbodyrows; i++) {
            for (j = 0; j < tbodycols; j++) {
                TbodyContent.push(tbody.rows[i].cells[j].getAttribute("value"));
            }
        }
        var SelectPeriodEN = document.getElementById("SearchPeriod").value;
        var SelectPeriod = "";
        var SelectedTime = "";
        if (SelectPeriodEN == "Year") {
            SelectPeriod = "年"
            SelectedTime = document.getElementById("SelectYear").value;
        }
        else if (SelectPeriodEN == "Month") {
            SelectPeriod = "月"
            SelectedTime = document.getElementById("SelectMonth").value;
        }
        else if (SelectPeriodEN == "Week") {
            SelectPeriod = "週"
            SelectedTime = document.getElementById("SelectWeek").value;
        }
        else if (SelectPeriodEN == "Day") {
            SelectPeriod = "日"
            SelectedTime = document.getElementById("SelectDay").value;
            var TimeArray = SelectedTime.split('/');
            SelectedTime = TimeArray[2] + '-' + TimeArray[0] + '-' + TimeArray[1];
        }
        var allArrays = [TbodyContent, TheadContent];
        let data = {
            data: {
                'outputType': 'SBData',
                'theadcols': theadcols,
                'tbodyrows': tbodyrows,
                'tbodycols': tbodycols,
                'SelectPeriod': SelectPeriod,
                'SelectedTime': SelectedTime,
            },
            allArrays: allArrays,
        }
        $.ajax({
            cache: false,
            async: false,
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            traditional: true,
            url: "/Home/OutputTableReport",
            data: JSON.stringify(data),
            success: function (data) {
                console.log("Output_success");
                Swal.fire('報表輸出成功', '', 'success');
                $('#OutputReport').show();
                document.getElementById("downloadfile").innerHTML = '';
                $('#downloadfile').append(
                    '<br/><label>' + data[0].filename + '<label>&nbsp;&nbsp;&nbsp;<a href="/AllReport/SBDataReport/' + data[0].filename + '" download = "' + data[0].filename + '"><button type="button" class="btn btn-success btn-sm">下載</button></a>'
                );
            },
            error: function (result) {
                console.log("Output_false");
            }
        });
    };
</script>

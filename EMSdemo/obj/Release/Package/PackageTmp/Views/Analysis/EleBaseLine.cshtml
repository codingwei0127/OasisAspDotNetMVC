
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-12">
        <div class="card" style="background-color: #ffffff;">
            <div class="card-header card-header-icon card-header-info">
                <div class="card-icon">
                    <i class="material-icons">query_stats</i>
                </div>
                <h4 class="card-title" style="font-weight:bold;color:#013d66">用電基準分析</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <label class="col-md-1"></label>
                    <div class="input-group col-md-2" id="SelectMonthDiv"></div>
                    <button onclick="EleBaselineSearch()" id="SearchButton" type="button" class="btn btn-fill btn-warning" style="font-weight:bold;">查詢</button>
                    &nbsp;&nbsp;&nbsp;
                    <button onclick="EleBaselineReport()" id="OutputButton" type="button" class="btn btn-fill btn-success SearchSuccess" style="font-weight:bold;display:none;">輸出成Excel</button>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <label class="SearchSuccess" id="Summary" style="font-size:x-large;color:black;font-weight:bold;margin-top:9px;margin-bottom:5px;display:none;">
                        實際用電總合&nbsp;&nbsp;<span id="SumkWh" style="color:#80DEEA;">1,000</span>&nbsp;kWh,
                        基準用電總合&nbsp;&nbsp;<span id="SumBasickWh" style="color:#80DEEA;">1,000</span>&nbsp;kWh
                    </label>
                </div>
                <div class="row" id="OutputReport" style="display:none;">
                    <label class="col-md-1"></label>
                    <div id="downloadfile"></div>
                </div>
                <div class="SearchSuccess" id="SearchDIV" style="display:none;">
                    <br />
                    <div class="row">
                        <label class="col-md-1"></label>
                        <div class="chart-container col-md-10" id="ChartDIV">
                            <div id="EleBaselineChart"></div>
                        </div>
                    </div>
                    <div class="row">
                        <table class="col-md-12" id="Table_EleBaseline" style="font-weight:bold;text-align:center;color:black;border-bottom:2px #000000 solid;">
                            <thead id="TableThead">
                                <tr style="background-color:#036EB7;border-bottom:2px #000000 solid;border-top:2px #000000 solid;color:white;height:40px;">
                                    <th class="col-md-2">時間</th>
                                    <th class="col-md-2">實際用電度數(kWh)</th>
                                    <th class="col-md-2">基準用電度數(kWh)</th>
                                    <th class="col-md-2">節能量(kWh)</th>
                                    <th class="col-md-2">節能率(%)</th>
                                    <th class="col-md-2">能耗表現</th>
                                </tr>
                            </thead>
                            <tbody id="TableTbody">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    document.getElementById("SysAnalysisTitle").classList.add("active");
    document.getElementById("SysAnalysis").classList.add("show");
    document.getElementById("EleBaseLine").classList.add("active");
    $(document).ready(function () {
        $().ready(function () {
            $.ajax({
                cache: false,
                async: false,
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                url: "/Analysis/EleBaseLineVal",
                success: function (data) {
                    console.log("LoadData_success");
                    var optionstring = "";
                    for (var i = 0; i < data[0].Time.length; i++) optionstring = optionstring + '<option value="' + data[0].Time[i] + '">' + data[0].Time[i] + '</option>';
                    $("#SelectMonthDiv").append(
                        '<select class="selectpicker" data-style="btn btn-info" data-live-search="true" title="請選擇年月份" data-size="8" id="SearchMonth"><option disabled="disabled" selected="selected">請選擇年月份</option>' + optionstring + '</select>'
                    );
                    $('.selectpicker').selectpicker('render');
                },
                error: function (result) {
                    console.log("LoadData_false");
                }
            });
        });
    });

    function EleBaselineSearch() {
        var SearchMonth = document.getElementById("SearchMonth").value;
        if (SearchMonth == "請選擇年月份") {
            alert("請選擇欲查詢的年月份");
            return
        }
        var Time = [];
        var ChartActualEle = [];
        var ChartBaselineEle = [];
        var ActualEle = [];
        var BaselineEle = [];
        var SaveEle = [];
        var SaveEleRate = [];
        var Performance = [];
        var TextColor = [];
        var TotalActualEle = 0, TotalBaselineEle = 0, TotalSaveEle = 0, TotalSaveEleRate = 0;
        let data = {
            data: {
                'SearchMonth': SearchMonth,
            }
        }
        $.ajax({
            type: "POST",
            url: "/Analysis/EleBaseLineSearch",
            contentType: 'application/json;charset=UTF-8',
            async: false,
            cache: false,
            dataType: "json",
            data: JSON.stringify(data),
            success: function (data) {
                console.log("Search_success");
                $(".SearchSuccess").show();
                $('#TableTbody>tr').remove();
                $("#EleBaselineChart").remove();
                $("#ChartDIV").append('<div id="EleBaselineChart"></div>');
                Time = data[0].Time;
                ActualEle = data[0].ActualEle;
                BaselineEle = data[0].BaselineEle;
                SaveEle = data[0].SaveEle;
                SaveEleRate = data[0].SaveEleRate;
                Performance = data[0].Performance;
                TextColor = data[0].TextColor;
                TotalActualEle = data[0].TotalActualEle;
                TotalBaselineEle = data[0].TotalBaselineEle;
                TotalSaveEle = data[0].TotalSaveEle;
                TotalSaveEleRate = data[0].TotalSaveEleRate;
            },
            error: function (res) {
                console.log('Search_false');
            }
        });
        document.getElementById("SumkWh").innerText = parseFloat(TotalActualEle).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        document.getElementById("SumBasickWh").innerText = parseFloat(TotalBaselineEle).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        //Table Data
        for (var i = 0; i < Time.length; i++) {
            if (i % 2 == 0) {
                $('#TableTbody').append(
                    '<tr style="background-color:#FAFAFA;color:' + TextColor[i] + ';height:40px;text-align:center;">' +
                    '<td value="' + Time[i] + '">' + Time[i] + '</td>' +
                    '<td value="' + ActualEle[i] + '">' + parseFloat(ActualEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + BaselineEle[i] + '">' + parseFloat(BaselineEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + SaveEle[i] + '">' + parseFloat(SaveEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + SaveEleRate[i] + '">' + parseFloat(SaveEleRate[i]).toFixed(2) + '</td>' +
                    '<td value="' + Performance[i] + '">' + Performance[i] + '</td></tr>'
                );
            }
            else {
                $('#TableTbody').append(
                    '<tr style="background-color:#EEEEEE;color:' + TextColor[i] + ';height:40px;text-align:center;">' +
                    '<td value="' + Time[i] + '">' + Time[i] + '</td>' +
                    '<td value="' + ActualEle[i] + '">' + parseFloat(ActualEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + BaselineEle[i] + '">' + parseFloat(BaselineEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + SaveEle[i] + '">' + parseFloat(SaveEle[i]).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
                    '<td value="' + SaveEleRate[i] + '">' + parseFloat(SaveEleRate[i]).toFixed(2) + '</td>' +
                    '<td value="' + Performance[i] + '">' + Performance[i] + '</td></tr>'
                );
            }
        }
        //Table Hover Event
        var originColor;
        $("#TableTbody > tr").hover(function () {
            originColor = this.style.backgroundColor;
            this.style.backgroundColor = '#f8e7aa';
        }, function () {
            this.style.backgroundColor = originColor;
        });
        //Table Summary
        $('#TableTbody').append(
            '<tr style="background-color:#b2dbf7;height:40px;text-align:center;border-top:2px #000000 solid;">' +
            '<td value="總計">總計</td>' +
            '<td value="' + TotalActualEle + '">' + parseFloat(TotalActualEle).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
            '<td value="' + TotalBaselineEle + '">' + parseFloat(TotalBaselineEle).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
            '<td value="' + TotalSaveEle + '">' + parseFloat(TotalSaveEle).toFixed(2).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '</td>' +
            '<td value="' + TotalSaveEleRate + '">' + parseFloat(TotalSaveEleRate).toFixed(2) + '</td><td></td></tr>'
        );

        //Chart Data
        for (var i = 0; i < Time.length; i++) {
            let localeTime = Time[i];
            //const localeTimeObj = new Date(localeTime).getTime() + 8*60*60*1000;
            const localeTimeObj = new Date(localeTime).getTime();

            var ActualEleArrObj = [];
            ActualEleArrObj[0] = localeTimeObj;
            if (ActualEle[i] == 0) ActualEleArrObj[1] = null;
            else ActualEleArrObj[1] = ActualEle[i];
            //ActualEleArrObj[1] = ActualEle[i];
            ChartActualEle.push(ActualEleArrObj);

            var BaselineEleArrObj = [];
            BaselineEleArrObj[0] = localeTimeObj;
            if (BaselineEle[i] == 0) BaselineEleArrObj[1] = null;
            else BaselineEleArrObj[1] = BaselineEle[i];
            //BaselineEleArrObj[1] = BaselineEle[i];
            ChartBaselineEle.push(BaselineEleArrObj);
        }
        var options = {
            chart: {
                type: 'line',
                id: 'Elechart',
                height: 400,
                zoom: {
                    type: 'x',
                    enabled: true,
                    autoScaleYaxis: true
                }
            },
            dataLabels: { enabled: false },
            colors: ["#0D3B66", "#EE964B"],
            markers: {
                size: 7,
                style: 'hollow',
            },
            yaxis: {
                title: {
                    text: "度數(kWh)",
                    rotate: 0,
                    style: {
                        fontSize: '16px',
                        fontWeight: 600,
                    },
                    offsetX: -30,
                },
                labels: {
                    formatter: function (val) {
                        return (parseFloat(val).toFixed(2)).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    }
                }
            },
            xaxis: {
                type: 'datetime',
                //min: ChartActualEle[0][0] - 24*3600*1000,
                //max: ChartActualEle[ChartActualEle.length - 1][0] + 24*3600*1000,
                title: {
                    text: "時間",
                    style: {
                        fontSize: '16px',
                        fontWeight: 600,
                    },
                    offsetY: 5,
                },
                labels: {
                    datetimeFormatter: { year: 'yyyy-MM-dd', month: 'MM-dd', day: 'MM-dd' }
                },
                tooltip: { enabled: false, }
            },
            legend: {
                position: 'top',
                horizontalAlign: 'center',
                tooltipHoverFormatter: function (val, opts) {
                    return val + ' ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''
                }
            },
            tooltip: {
                x: { format: 'yyyy-MM-dd' },
                y: {
                    formatter: function (val) {
                        return (parseFloat(val).toFixed(2)).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + "度";
                    }
                }
            },
            noData: {
                text: "Loading...",
                align: 'center',
                verticalAlign: 'middle',
                offsetX: 0,
                offsetY: -30,
                style: {
                    color: "#000000",
                    fontSize: '20px',
                    fontFamily: "Helvetica"
                }
            },
            //series: [],
            series: [
                { name: "實際用電", data: ChartActualEle },
                { name: "基準用電", data: ChartBaselineEle }
            ],
        };
        var chart = new ApexCharts(document.querySelector("#EleBaselineChart"), options);
        chart.render();
    };

    function EleBaselineReport() {
        var tbody = document.getElementById("TableTbody");
        var tbodyrows = tbody.rows.length;
        var tbodycols = tbody.rows[0].cells.length;
        var TbodyContent = [];
        for (var i = 0; i < tbodyrows; i++) {
            for (j = 0; j < tbodycols; j++) {
                //TbodyContent.push(tbody.rows[i].cells[j].innerHTML);
                TbodyContent.push(tbody.rows[i].cells[j].getAttribute("value"));
            }
        }
        var allArrays = [TbodyContent];
        let data = {
            data: {
                'outputType': 'EleBaseline',
                'tbodyrows': tbodyrows,
                'tbodycols': tbodycols,
            },
            allArrays: allArrays,
        }
        $.ajax({
            cache: false,
            async: false,
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            traditional: true,
            url: "/Home/OutputTableReport",
            data: JSON.stringify(data),
            success: function (data) {
                console.log("Output_success");
                Swal.fire('報表輸出成功', '', 'success');
                $('#OutputReport').show();
                document.getElementById("downloadfile").innerHTML = '';
                $('#downloadfile').append(
                    '<br/><label>' + data[0].filename + '<label>&nbsp;&nbsp;&nbsp;<a href="/AllReport/EleBaselineReport/' + data[0].filename + '" download = "' + data[0].filename + '"><button type="button" class="btn btn-success btn-sm">下載</button></a>'
                );
            },
            error: function (result) {
                console.log("Output_false");
            }
        });
    };
</script>
